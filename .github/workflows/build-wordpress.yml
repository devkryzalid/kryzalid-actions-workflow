name: Build WordPress Project

on:
  workflow_call:
    inputs:
      branch:
        description: "Branch name (dev for staging, main for production)"
        type: string
        required: true
      ssh_private_key_staging:
        description: "SSH private key for staging"
        type: string
      ssh_private_key_prod:
        description: "SSH private key for production"
        type: string
      ssh_user_staging:
        description: "SSH user for staging"
        type: string
      ssh_user_prod:
        description: "SSH user for production"
        type: string
      server_host_staging:
        description: "Server host for staging"
        type: string
      server_host_prod:
        description: "Server host for production"
        type: string
      project_path_staging:
        description: "Project path for staging"
        type: string
      project_path_prod:
        description: "Project path for production"
        type: string
      slack_webhook_url:
        description: "Slack Webhook URL"
        type: string
        required: true

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Validate required secrets for the branch
        run: |
          echo "üöÄ Validating secrets for branch '${{ inputs.branch }}'"

          if [ "${{ inputs.branch }}" = "dev" ]; then
            if [ -z "${{ inputs.ssh_private_key_staging }}" ]; then
              echo "‚ùå Missing required secret: ssh_private_key_staging"
              exit 1
            fi
            if [ -z "${{ inputs.ssh_user_staging }}" ]; then
              echo "‚ùå Missing required secret: ssh_user_staging"
              exit 1
            fi
            if [ -z "${{ inputs.server_host_staging }}" ]; then
              echo "‚ùå Missing required secret: server_host_staging"
              exit 1
            fi
            if [ -z "${{ inputs.project_path_staging }}" ]; then
              echo "‚ùå Missing required secret: project_path_staging"
              exit 1
            fi
            echo "‚úÖ All required secrets for staging are present!"
          elif [ "${{ inputs.branch }}" = "main" ]; then
            if [ -z "${{ inputs.ssh_private_key_prod }}" ]; then
              echo "‚ùå Missing required secret: ssh_private_key_prod"
              exit 1
            fi
            if [ -z "${{ inputs.ssh_user_prod }}" ]; then
              echo "‚ùå Missing required secret: ssh_user_prod"
              exit 1
            fi
            if [ -z "${{ inputs.server_host_prod }}" ]; then
              echo "‚ùå Missing required secret: server_host_prod"
              exit 1
            fi
            if [ -z "${{ inputs.project_path_prod }}" ]; then
              echo "‚ùå Missing required secret: project_path_prod"
              exit 1
            fi
            echo "‚úÖ All required secrets for production are present!"
          else
            echo "‚ùå Invalid branch specified: '${{ inputs.branch }}'"
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Set environment variables
        id: env
        run: |
          if [ "${{ inputs.branch }}" = "dev" ]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "build_command=dev" >> $GITHUB_OUTPUT
          else
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "build_command=build" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ inputs.branch == 'dev' && inputs.ssh_private_key_staging || inputs.ssh_private_key_prod }}

      - name: Deploy and build
        env:
          SSH_USER: ${{ inputs.branch == 'dev' && inputs.ssh_user_staging || inputs.ssh_user_prod }}
          SERVER_HOST: ${{ inputs.branch == 'dev' && inputs.server_host_staging || inputs.server_host_prod }}
          PROJECT_PATH: ${{ inputs.branch == 'dev' && inputs.project_path_staging || inputs.project_path_prod }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SERVER_HOST "\
            cd $PROJECT_PATH && \
            git pull && \
            if git diff --name-only HEAD HEAD~1 | grep -q 'package.json'; then \
              npm ci; \
            fi && \
            npm run ${{ steps.env.outputs.build_command }}"

  notify:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send notification to Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "${{ needs.build.result == 'success' && '‚úÖ' || '‚ùå' }} Build ${{ needs.build.result }} for *${{ inputs.branch == 'dev' && 'staging' || 'production' }}* environment\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ inputs.branch }}\n*Commit:* ${{ github.event.head_commit.message }}\n*Author:* ${{ github.event.head_commit.author.name }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
